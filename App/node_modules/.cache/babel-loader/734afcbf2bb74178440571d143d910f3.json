{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paladynamovincent/Downloads/Cloud/Other Projects/tsx/todolist/src/App.tsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport { Button, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textBox: \"\",\n      isChecked: false,\n      todos: Array()\n    };\n    this.api = 'https://localhost:5001/api/TodoItems/';\n  }\n\n  textBox() {\n    return this.state.textBox;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: this.state.todos.map(data => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: `${data.id}: ${data.name} > ${data.isCompleted}`\n          }, data.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 68\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.getJSON();\n          },\n          children: \"Get API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: this.state.isChecked,\n          onChange: event => this.setCheck(event),\n          inputProps: {\n            'aria-label': 'primary checkbox'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => {\n            this.postJSON(this.state.textBox);\n          },\n          children: \"Post API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }, this);\n  }\n\n  setCheck(event) {\n    this.setState({\n      textBox: this.textBox(),\n      isChecked: event.target.checked,\n      todos: this.state.todos\n    });\n  }\n\n  getJSON() {\n    axios.get(this.api).then(response => {\n      // change the list into the state\n      const todos = response.data.sort((a, b) => {\n        return a.id <= b.id ? -1 : 1;\n      });\n      this.setState({\n        todos: todos\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  postJSON(name, isCompleted = false, dueDate = null) {\n    axios.post(this.api, {\n      name: name,\n      dueDate: dueDate,\n      isCompleted: isCompleted\n    }).then(_ => {\n      this.getJSON();\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paladynamovincent/Downloads/Cloud/Other Projects/tsx/todolist/src/App.tsx"],"names":["React","Button","Checkbox","axios","App","Component","state","textBox","isChecked","todos","Array","api","render","logo","map","data","id","name","isCompleted","getJSON","event","setCheck","postJSON","setState","target","checked","get","then","response","sort","a","b","catch","error","console","dueDate","post","_"],"mappings":"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","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport logo from './logo.svg';\nimport { Button, Checkbox } from '@material-ui/core';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n\n    state = {\n        textBox: \"\",\n        isChecked: false,\n        todos: Array<TodoItems>()\n    };\n\n    api: string = 'https://localhost:5001/api/TodoItems/';\n\n    textBox(): string {\n        return this.state.textBox;\n    }\n\n    render(): JSX.Element {\n      return (\n          <div className=\"App\">\n              <header className=\"App-header\">\n                  <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                  <ul>\n                      { this.state.todos.map((data: TodoItems) => (<li key={data.id}>{ `${data.id}: ${data.name} > ${data.isCompleted}` }</li>)) }\n                  </ul>\n                  <Button onClick={() => {this.getJSON()}}>Get API</Button>\n                  <Checkbox\n                      checked={this.state.isChecked}\n                      onChange={(event) => this.setCheck(event)}\n                      inputProps={{ 'aria-label': 'primary checkbox' }}\n                  />\n                  <Button onClick={() => {this.postJSON(this.state.textBox, )}}>Post API</Button>\n              </header>\n          </div>\n      );\n    }\n\n    setCheck(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({\n            textBox: this.textBox(),\n            isChecked: event.target.checked,\n            todos: this.state.todos\n        })\n    }\n\n    getJSON(): void {\n        axios.get(this.api)\n            .then( (response) => {\n                // change the list into the state\n                const todos: TodoItems[] = response.data.sort((a: TodoItems, b: TodoItems) => {\n                    return a.id <= b.id ? -1 : 1;\n                });\n                this.setState({ todos: todos });\n            })\n            .catch( (error: Error) => {\n                console.error(error);\n            });\n    }\n\n    postJSON(name: string, isCompleted: boolean = false, dueDate: Date | null = null): void {\n        axios.post(this.api, {\n            name: name,\n            dueDate: dueDate,\n            isCompleted: isCompleted\n        }).then(_ => {\n            this.getJSON();\n        }).catch( (error: Error) => {\n           console.error(error)\n        });\n    }\n}\n\ninterface TodoItems {\n    id: number,\n    name: string,\n    createdAt: Date,\n    dueDate: Date | null,\n    isCompleted: boolean\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}