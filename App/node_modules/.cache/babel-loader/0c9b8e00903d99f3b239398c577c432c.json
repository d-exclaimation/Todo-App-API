{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/paladynamovincent/Downloads/Cloud/Other Projects/tsx/todolist/src/App.tsx\";\nimport React from 'react';\nimport { Button, Checkbox, TextField, List, ListItem, ListItemText, ListItemSecondaryAction } from '@material-ui/core';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      textBox: \"\",\n      isChecked: false,\n      todos: Array()\n    };\n    this.api = 'https://localhost:5001/api/TodoItems/';\n  }\n\n  textBox() {\n    return this.state.textBox;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(List, {\n          component: \"nav\",\n          \"aria-label\": \"main mailbox folders\",\n          children: this.state.todos.map(data => /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemSecondaryAction, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                disabled: true,\n                checked: data.isCompleted,\n                color: \"primary\",\n                inputProps: {\n                  'aria-label': 'secondary checkbox'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 35\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 31\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: data.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 31\n            }, this)]\n          }, data.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 27\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outlined\",\n          color: \"primary\",\n          onClick: () => {\n            this.getJSON();\n          },\n          children: \"Get API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(FormGroup, {\n          className: \"App-Form\",\n          children: [/*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"Name of new task\",\n            onChange: event => this.setTextBox(event),\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n            control: /*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: this.state.isChecked,\n              onChange: event => this.setCheck(event),\n              color: \"primary\",\n              inputProps: {\n                'aria-label': 'primary checkbox'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 31\n            }, this),\n            label: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          onClick: () => {\n            this.postJSON(this.state.textBox, this.state.isChecked);\n          },\n          children: \"Post API\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this);\n  }\n\n  setCheck(event) {\n    this.setState({\n      isChecked: event.target.checked\n    });\n  }\n\n  setTextBox(event) {\n    const result = event.target.value;\n    this.setState({\n      textBox: result\n    });\n  }\n\n  getJSON() {\n    axios.get(this.api).then(response => {\n      // change the list into the state\n      const todos = response.data.sort((a, b) => {\n        return a.id <= b.id ? -1 : 1;\n      });\n      this.setState({\n        todos: todos\n      });\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n  postJSON(name, isCompleted = false, dueDate = null) {\n    console.log(this.state);\n    axios.post(this.api, {\n      name: name,\n      dueDate: dueDate,\n      isCompleted: isCompleted\n    }).then(_ => {\n      this.getJSON();\n    }).catch(error => {\n      console.error(error);\n    });\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/paladynamovincent/Downloads/Cloud/Other Projects/tsx/todolist/src/App.tsx"],"names":["React","Button","Checkbox","TextField","List","ListItem","ListItemText","ListItemSecondaryAction","FormGroup","FormControlLabel","axios","App","Component","state","textBox","isChecked","todos","Array","api","render","map","data","isCompleted","name","id","getJSON","event","setTextBox","setCheck","postJSON","setState","target","checked","result","value","get","then","response","sort","a","b","catch","error","console","dueDate","log","post","_"],"mappings":"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","sourcesContent":["import React, {ChangeEvent} from 'react';\nimport {Button, Checkbox, TextField, List, ListItem, ListItemText, ListItemSecondaryAction} from '@material-ui/core';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport axios from 'axios';\nimport './App.css';\n\n\nclass App extends React.Component {\n\n    state = {\n        textBox: \"\",\n        isChecked: false,\n        todos: Array<TodoItems>()\n    };\n\n    api: string = 'https://localhost:5001/api/TodoItems/';\n\n    textBox(): string {\n        return this.state.textBox;\n    }\n\n    render(): JSX.Element {\n        return (\n          <div className=\"App\">\n              <header className=\"App-header\">\n                  <List component=\"nav\" aria-label=\"main mailbox folders\">\n                      { this.state.todos.map((data: TodoItems) => (\n                          <ListItem key={data.id}>\n                              <ListItemSecondaryAction>\n                                  <Checkbox\n                                      disabled\n                                      checked={data.isCompleted}\n                                      color=\"primary\"\n                                      inputProps={{ 'aria-label': 'secondary checkbox' }}\n                                  />\n                              </ListItemSecondaryAction>\n                              <ListItemText primary={data.name} />\n                          </ListItem>\n                      )) }\n                  </List>\n                  {/*<ul>*/}\n                  {/*    { this.state.todos.map((data: TodoItems) => (<li key={data.id}>{ `${data.id}: ${data.name} > ${data.isCompleted}` }</li>)) }*/}\n                  {/*</ul>*/}\n                  <Button variant=\"outlined\" color=\"primary\" onClick={() => {this.getJSON()}}>Get API</Button>\n                  <br />\n                  <FormGroup className=\"App-Form\">\n                      <TextField\n                          id=\"outlined-basic\"\n                          label=\"Name of new task\"\n                          onChange={(event) => this.setTextBox(event)}\n                          variant=\"outlined\"\n                      />\n                      <FormControlLabel\n                          control={\n                              <Checkbox\n                                  checked={this.state.isChecked}\n                                  onChange={(event) => this.setCheck(event)}\n                                  color=\"primary\"\n                                  inputProps={{ 'aria-label': 'primary checkbox' }}\n                              />\n                          }\n                          label=\"Completed\"\n                      />\n                  </FormGroup>\n                  <Button color=\"secondary\" onClick={() => {this.postJSON(this.state.textBox, this.state.isChecked)}}>Post API</Button>\n              </header>\n          </div>\n        );\n    }\n\n    setCheck(event: ChangeEvent<HTMLInputElement>): void {\n        this.setState({ isChecked: event.target.checked });\n    }\n\n    setTextBox(event: ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void {\n        const result: string = event.target.value;\n        this.setState({ textBox: result });\n    }\n\n    getJSON(): void {\n        axios.get(this.api)\n            .then( (response) => {\n                // change the list into the state\n                const todos: TodoItems[] = response.data.sort((a: TodoItems, b: TodoItems) => {\n                    return a.id <= b.id ? -1 : 1;\n                });\n                this.setState({ todos: todos });\n            })\n            .catch( (error: Error) => {\n                console.error(error);\n            });\n    }\n\n    postJSON(name: string, isCompleted: boolean = false, dueDate: Date | null = null): void {\n        console.log(this.state);\n        axios.post(this.api, {\n            name: name,\n            dueDate: dueDate,\n            isCompleted: isCompleted\n        }).then(_ => {\n            this.getJSON();\n        }).catch( (error: Error) => {\n           console.error(error)\n        });\n    }\n}\n\ninterface TodoItems {\n    id: number,\n    name: string,\n    createdAt: Date,\n    dueDate: Date | null,\n    isCompleted: boolean\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}